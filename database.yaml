- name: Add database to database server
  hosts: localhost

  vars:
    main_db: <>
    schemas:
      - <>
    user:
      prefix: morphisec
      create_read_only: false
      create_edit_only: true
      create_write: false
    postgres_auth: &postgres_auth
      login_host: <>
      login_user: <>
      login_password: <>

  tasks:
    - name: Ping PostgreSQL
      community.postgresql.postgresql_ping:
        <<: *postgres_auth
        db: "{{ main_db }}"
      register: result

    - name: Remove public schemas
      when: result.is_available
      community.postgresql.postgresql_schema:
        <<: *postgres_auth
        db: "{{ main_db }}"
        name: public
        state: absent

    - name: Create schemas
      when: result.is_available == true
      community.postgresql.postgresql_schema:
        <<: *postgres_auth
        db: "{{ main_db }}"
        name: "{{ item }}"
      loop: "{{ schemas }}"

    - name: Revoke access to posgres db
      community.postgresql.postgresql_privs:
        <<: *postgres_auth
        db: postgres
        type: database
        privs: CONNECT
        objs: postgres
        role: PUBLIC
        state: absent

    - name: Create read user
      when: result.is_available and user.create_read_only
      block:
        - name: Create read_group group
          community.postgresql.postgresql_user:
            <<: *postgres_auth
            db: "{{ main_db }}"
            name: "{{ user.prefix }}_read_group"
            role_attr_flags: NOLOGIN
            no_password_changes: yes
            comment: This group can read only

        - name: Create read user
          community.postgresql.postgresql_user:
            <<: *postgres_auth
            db: "{{ main_db }}"
            name: "{{ user.prefix }}_read"
            password: iu4q46tfaze0
            comment: This user can read but not change the schema

        - name: Grant usage on schemas
          community.postgresql.postgresql_privs:
            <<: *postgres_auth
            db: "{{ main_db }}"
            privs: USAGE
            objs: "{{ item }}"
            type: schema
            roles: "{{ user.prefix }}_read_group"
          loop: "{{ schemas }}"

        - name: Alter default privs to allow read on db
          community.postgresql.postgresql_privs:
            <<: *postgres_auth
            db: "{{ main_db }}"
            objs: TABLES,SEQUENCES
            privs: SELECT
            type: default_privs
            role: "{{ user.prefix }}_read_group"
            schema: "{{ item }}"
          loop: "{{ schemas }}"

        - name: Grant reading privs on existing tables
          community.postgresql.postgresql_privs:
            <<: *postgres_auth
            db: "{{ main_db }}"
            objs: ALL_IN_SCHEMA
            privs: SELECT
            type: table
            role: "{{ user.prefix }}_read_group"
            schema: "{{ item }}"
          loop: "{{ schemas }}"

        - name: Grant role read_group to read
          community.postgresql.postgresql_membership:
            <<: *postgres_auth
            db: "{{ main_db }}"
            group: "{{ user.prefix }}_read_group"
            target_roles:
            - "{{ user.prefix }}_read"
            state: present

    - name: Create edit user
      when: result.is_available and user.create_edit_only
      block:
        - name: Create edit_group group
          community.postgresql.postgresql_user:
            <<: *postgres_auth
            db: "{{ main_db }}"
            name: "{{ user.prefix }}_edit_group"
            role_attr_flags: NOLOGIN
            no_password_changes: yes
            comment: This group can edit only

        - name: Create edit user
          community.postgresql.postgresql_user:
            <<: *postgres_auth
            db: "{{ main_db }}"
            name: "{{ user.prefix }}_edit"
            password: ceec4eif7ya
            comment: This user can edit but not change the schema

        - name: Grant usage on schemas
          community.postgresql.postgresql_privs:
            <<: *postgres_auth
            db: "{{ main_db }}"
            privs: USAGE
            objs: "{{ item }}"
            type: schema
            roles: "{{ user.prefix }}_edit_group"
          loop: "{{ schemas }}"

        - name: Alter default privs to allow edit on db
          community.postgresql.postgresql_privs:
            <<: *postgres_auth
            db: "{{ main_db }}"
            objs: TABLES
            privs: SELECT,INSERT,UPDATE
            type: default_privs
            role: "{{ user.prefix }}_edit_group"
            schema: "{{ item }}"
          loop: "{{ schemas }}"

        - name: Grant edit privs on existing tables
          community.postgresql.postgresql_privs:
            <<: *postgres_auth
            db: "{{ main_db }}"
            objs: ALL_IN_SCHEMA
            privs: SELECT,INSERT,UPDATE
            type: table
            role: "{{ user.prefix }}_edit_group"
            schema: "{{ item }}"
          loop: "{{ schemas }}"

        - name: Grant role edit_group to edit
          community.postgresql.postgresql_membership:
            <<: *postgres_auth
            db: "{{ main_db }}"
            group: "{{ user.prefix }}_edit_group"
            target_roles:
              - "{{ user.prefix }}_edit"
            state: present